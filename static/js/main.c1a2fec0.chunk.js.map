{"version":3,"sources":["index.js"],"names":["Header","props","name","App","state","notes","note","editedNote","id","value","handleChange","bind","savedNotes","JSON","parse","localStorage","getItem","error","this","saveNotes","setState","index","foundNote","find","trim","saveNotesToLocalStorage","notesCount","length","lastId","todoItem","striked","setItem","stringify","filter","map","onChange","event","target","className","onClick","addNote","ToDoItem","key","onNoteStatusChange","changeNoteStatus","onNoteDelete","deleteNote","onEditNoteInput","handleEditingNoteChange","onEditConfirm","saveEditedNote","onEditBtnClick","enableEditMode","onEditCancel","disableEditMode","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1a2fec0.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst LOCAL_STORAGE_KEY = \"react_todo_list\";\n\nfunction Header(props) {\n  return <h1>{props.name}</h1>;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n      note: \"\",\n      editedNote: { id: null, value: \"\" },\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    let savedNotes;\n    try {\n      savedNotes = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (error) {\n      savedNotes = [];\n      this.saveNotes(savedNotes);\n    }\n\n    this.setState({\n      notes: savedNotes || [],\n    });\n  }\n\n  handleChange(value) {\n    this.setState({ note: value });\n  }\n\n  saveEditedNote(index) {\n    const notes = this.state.notes;\n    const foundNote = this.state.notes.find((note) => note.id === index);\n\n    if (foundNote && this.state.editedNote.value.trim()) {\n      foundNote.value = this.state.editedNote.value;\n      this.setState({ notes: notes });\n      this.setState({\n        editedNote: { ...this.state.editedNote, value: \"\" },\n      });\n      this.saveNotesToLocalStorage(notes);\n    }\n    this.setState({ editedNote: { id: null, value: \"\" } });\n  }\n\n  addNote() {\n    const notesCount = this.state.notes.length;\n    const lastId = this.state.notes[notesCount - 1]?.id || 0;\n    const todoItem = this.state.note.trim();\n\n    if (todoItem) {\n      const notes = [\n        ...this.state.notes,\n        { id: lastId + 1, value: todoItem, striked: false },\n      ];\n\n      this.setState({\n        notes: notes,\n      });\n      this.saveNotesToLocalStorage(notes);\n    }\n\n    this.setState({ note: \"\" });\n  }\n\n  saveNotesToLocalStorage(notes) {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(notes));\n  }\n\n  deleteNote(index) {\n    const notes = this.state.notes.filter((note) => note.id !== index);\n\n    this.setState({\n      notes: notes,\n    });\n    this.saveNotesToLocalStorage(notes);\n  }\n\n  changeNoteStatus(index) {\n    const notes = this.state.notes.map((note) => ({\n      ...note,\n      striked: note.id !== index ? note.striked : !note.striked,\n    }));\n\n    this.setState({\n      notes: notes,\n    });\n    this.saveNotesToLocalStorage(notes);\n  }\n\n  handleEditingNoteChange(value) {\n    this.setState({ editedNote: { ...this.state.editedNote, value: value } });\n  }\n\n  enableEditMode(index) {\n    const foundNote = this.state.notes.find((note) => note.id === index);\n    this.setState({ editedNote: { id: index, value: foundNote.value } });\n  }\n\n  disableEditMode() {\n    this.setState({ editedNote: { id: null, value: \"\" } });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header name=\"ToDo list\" />\n        <div>\n          <input\n            onChange={(event) => this.handleChange(event.target.value)}\n            value={this.state.note}\n          ></input>\n          <button className=\"btn\" onClick={() => this.addNote()}>\n            Add task\n          </button>\n          {this.state.notes.map((note) => (\n            <ToDoItem\n              key={note.id}\n              name={note.value}\n              id={note.id}\n              striked={note.striked}\n              editedNote={this.state.editedNote}\n              onNoteStatusChange={() => this.changeNoteStatus(note.id)}\n              onNoteDelete={() => this.deleteNote(note.id)}\n              onEditNoteInput={(value) => this.handleEditingNoteChange(value)}\n              onEditConfirm={() => this.saveEditedNote(note.id)}\n              onEditBtnClick={() => this.enableEditMode(note.id)}\n              onEditCancel={() => this.disableEditMode()}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction ToDoItem(props) {\n  return (\n    <div className=\"todo-item\">\n      <button className=\"btn\" onClick={props.onNoteDelete}>\n        X\n      </button>\n\n      {props.editedNote.id !== null && props.editedNote.id === props.id ? (\n        <>\n          <input\n            className=\"ml20\"\n            value={props.editedNote.value}\n            onChange={(event) => props.onEditNoteInput(event.target.value)}\n          ></input>\n          <button className=\"btn\" onClick={props.onEditConfirm}>\n            Save\n          </button>\n          <button className=\"btn\" onClick={props.onEditCancel}>\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <span\n            className={(props.striked ? \" striked \" : \"\") + \"ml20\"}\n            onClick={props.onNoteStatusChange}\n          >\n            {props.name}\n          </span>\n          <button className=\"btn\" onClick={props.onEditBtnClick}>\n            Edit\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}